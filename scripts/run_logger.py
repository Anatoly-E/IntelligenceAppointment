import os
import subprocess
import time

Import("env")

project_dir = env['PROJECT_DIR']
logger_path = os.path.join(project_dir, "scripts", "serial_logger.py")

def after_upload(source, target, env):
    print("[POST-UPLOAD] –ü—Ä–æ—à–∏–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –∑–∞–ø—É—Å–∫ –ª–æ–≥–≥–µ—Ä–∞...")

    # –î–∞–¥–∏–º Arduino 10 —Å–µ–∫—É–Ω–¥ –Ω–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø–æ—Å–ª–µ –ø—Ä–æ—à–∏–≤–∫–∏
    time.sleep(10)

    try:
        # üëâ –ó–¥–µ—Å—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏–º–µ–Ω–Ω–æ —Ç–æ—Ç Python, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–π–¥–µ–Ω —É —Ç–µ–±—è
        subprocess.Popen(
            [r"C:\Users\EAV-Note\.platformio\python3\python.exe", logger_path],
            shell=True
        )
        print(f"[POST-UPLOAD] –õ–æ–≥–≥–µ—Ä –∑–∞–ø—É—â–µ–Ω: {logger_path}")
    except Exception as e:
        print(f"[POST-UPLOAD] –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ª–æ–≥–≥–µ—Ä–∞: {e}")

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º post-upload –¥–µ–π—Å—Ç–≤–∏–µ
env.AddPostAction("upload", after_upload)
